#2563. " To count the number of fair pairs"

import java.util.Arrays;
class Solution {
    public long countFairPairs(int[] nums, int lower, int upper) {
        Arrays.sort(nums);
        long fairPairsCount = 0;
        int n = nums.length;

        // Iterate over each possible `i`
        for (int i = 0; i < n - 1; i++) {
            int left = i + 1;
            int right = n - 1;
            int minIndex = -1, maxIndex = -1;

            // Binary search for the minimum index `j` where nums[i] + nums[j] >= lower
            while (left <= right) {
                int mid = left + (right - left) / 2;
                if (nums[i] + nums[mid] >= lower) {
                    minIndex = mid;
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            }

            left = i + 1;
            right = n - 1;

            // Binary search for the maximum index `j` where nums[i] + nums[j] <= upper
            while (left <= right) {
                int mid = left + (right - left) / 2;
                if (nums[i] + nums[mid] <= upper) {
                    maxIndex = mid;
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            }

            // Add the count of valid pairs if the range is valid
            if (minIndex != -1 && maxIndex != -1 && minIndex <= maxIndex) {
                fairPairsCount += (maxIndex - minIndex + 1);
            }
        }

        return fairPairsCount;
    }
}
