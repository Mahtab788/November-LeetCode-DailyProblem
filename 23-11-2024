#.1861 "Rotating-the-box"


class Solution {
    public char[][] rotateTheBox(char[][] box) {
        int m = box.length; // Number of rows
        int n = box[0].length; // Number of columns
        
        // Simulate gravity
        for (int i = 0; i < m; i++) {
            int emptyPos = n - 1; // Track the next available empty position from the end
            for (int j = n - 1; j >= 0; j--) {
                if (box[i][j] == '*') {
                    emptyPos = j - 1; // Reset to the left of the obstacle
                } else if (box[i][j] == '#') {
                    box[i][j] = '.'; // Remove the stone
                    box[i][emptyPos] = '#'; // Place it at the next empty position
                    emptyPos--; // Move the empty position
                }
            }
        }
        
        // Rotate the box 90 degrees clockwise
        char[][] rotatedBox = new char[n][m];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                rotatedBox[j][m - i - 1] = box[i][j];
            }
        }
        
        return rotatedBox;
    }
}
